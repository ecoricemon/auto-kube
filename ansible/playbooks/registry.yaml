---
# Run private registry
- hosts: node0
  gather_facts: yes
  vars_files:
  - vars.yaml
  tasks:
  - name: Check registry image
    ansible.builtin.shell: docker image ls | grep registry
    register: ls_registry
    failed_when: ls_registry['rc'] == 2

  - name: Pull registry image
    ansible.builtin.shell: docker image pull registry
    when: ls_registry['stdout'].find("registry") == -1
  
  - name: Create .registry directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
    loop:
    - ~/.registry/data
    - ~/.registry/certs
    - ~/.registry/auth

  - name: Check cert.key and cert.crt
    ansible.builtin.find:
      paths: ~/.registry/certs
      patterns: 'cert.key,cert.crt'
    register: certfiles

  - name: Create cert.key
    ansible.builtin.shell: openssl genrsa -out ~/.registry/certs/cert.key 2048
    when: certfiles['matched'] != 2

  - name: Create cert.csr
    ansible.builtin.shell: openssl req -new -key ~/.registry/certs/cert.key -out ~/.registry/certs/cert.csr -subj "/C=KR/O=Organization/CN={{ registry['domain'] }}"
    when: certfiles['matched'] != 2

  - name: Create cert.ext
    ansible.builtin.blockinfile:
      path: ~/.registry/certs/cert.ext
      create: yes
      block: |
        [default]
        subjectAltName = \
          IP:{{ hostvars['node0']['ansible_host'] }}, \
          DNS:{{ registry['domain'] }}
    when: certfiles.matched != 2

  - name: Create cert.crt
    ansible.builtin.shell: openssl x509 -req -days 36500 -in ~/.registry/certs/cert.csr -signkey ~/.registry/certs/cert.key -extfile ~/.registry/certs/cert.ext -out ~/.registry/certs/cert.crt
    when: certfiles.matched != 2

  - name: Create docker-compose.yaml
    ansible.builtin.blockinfile:
      path: ~/.registry/docker-compose.yaml
      create: yes
      block: |
        registry:
          container_name: registry
          restart: always
          image: registry
          ports:
          - {{ registry['port'] }}:5000
          environment:
            REGISTRY_STORAGE_DELETE_ENABLED: "true"
            REGISTRY_HTTP_TLS_CERTIFICATE: /certs/cert.crt
            REGISTRY_HTTP_TLS_KEY: /certs/cert.key
            #REGISTRY_AUTH: htpasswd
            #REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
            #REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
          volumes:
          - ~/.registry/data:/var/lib/registry
          - ~/.registry/certs:/certs
          #- ~/.registry/auth:/auth

  - name: Copy cert into the cert directory
    become: yes
    ansible.builtin.copy:
      remote_src: yes
      src: "{{ ansible_env.HOME }}/.registry/certs/cert.crt"
      dest: "/etc/docker/certs.d/{{ registry['url'] }}/"

  - name: Run registry
    ansible.builtin.shell: docker-compose -f ~/.registry/docker-compose.yaml up -d

