---
- hosts: cp0
  gather_facts: no
  vars_files:
  - vars.yaml
  vars:
  - dir: "{{ cilium['dir'] }}/chart"
  - harbor_pw: "{{ lookup('file', '.keep/harbor-robot-kube-secret') }}"
  tasks:
  - name: Make sure the dir exists
    ansible.builtin.file:
      path: "{{ dir }}"
      state: directory

  - name: Check cilium chart
    ansible.builtin.stat:
      path: "{{ dir }}/cilium-{{ cilium['img_ver'] }}.tgz"
    register: stat_chart

  - name: Pull cilium chart
    ansible.builtin.shell: |
      helm pull cilium --repo https://helm.cilium.io --version {{ cilium['img_ver'] }}
      mv ~/cilium-{{ cilium['img_ver'] }}.tgz {{ dir }}/
    when: not stat_chart['stat']['exists']

  - name: Check cilium
    ansible.builtin.shell: helm list -n kube-system | grep cilium
    register: grep_cilium
    failed_when: grep_cilium['rc'] == 2

  - name: Remove previous cilium untar dir
    ansible.builtin.file:
      path: "{{ dir }}/cilium"
      state: absent
    when: grep_cilium['rc'] == 1

  - name: Untar cilium chart
    ansible.builtin.shell: tar -xzf {{ dir }}/cilium-{{ cilium['img_ver'] }}.tgz -C {{ dir }}
    when: grep_cilium['rc'] == 1

  - name: Collect cilium image names
    ansible.builtin.shell: |
      sed -Ei "s/(^[ $(echo -e '\t')]*tag: [a-zA-Z0-9\".]*)@([a-zA-Z0-9:]*)/\1/" {{ dir }}/cilium/values.yaml
      sed -i "s/useDigest: true/useDigest: false/" {{ dir }}/cilium/values.yaml
      helm template cilium {{ dir }}/cilium -n kube-system > {{ dir }}/rendered.yaml
      cat {{ dir }}/rendered.yaml | grep -E "^[ $(echo -e '\t')]*image:" | sed "s/[ $(echo -e '\t')]*image: //; s/\"//g" | sort | uniq > {{ dir }}/src-images
      cat {{ dir }}/src-images | sed "s#^#{{ harbor['prj'] }}/#" > {{ dir }}/dest-images
    when: grep_cilium['rc'] == 1

  - name: Login to harbor
    ansible.builtin.import_tasks: login-harbor.yaml
    when: grep_cilium['rc'] == 1

  - name: Pull cilium images
    ansible.builtin.shell: |
      linenum=$(wc -l {{ dir }}/src-images | cut -d ' ' -f 1)
      i=1
      while [ $i -le $linenum ]; do
        src=$(sed "$i!d;q" {{ dir }}/src-images)
        dest=$(sed "$i!d;q" {{ dir }}/dest-images)
        repo=$(echo $dest | sed "s#{{ harbor['external'] }}/##" | cut -d ':' -f 1)
        tag=$(echo $dest | sed "s#{{ harbor['external'] }}/##" | cut -d ':' -f 2)
        existtags=$(curl -ksu 'robot$kube':{{ harbor_pw }} https://{{ harbor['external'] }}/v2/$repo/tags/list)
        if [ -z "$(echo $existtags | grep $tag)" ]; then
          docker image pull $src
          docker image tag $src $dest
          docker image push $dest
        fi
        i=$((i+1))
      done
    when: grep_cilium['rc'] == 1

  - name: Install cilium
    ansible.builtin.shell: |
      sed -i "s#repository: \"#repository: \"{{ harbor['prj'] }}/#" "{{ dir }}/cilium/values.yaml"
      cp_addr=$(cat {{ kubeadm['dir'] }}/join-cmd | grep -Eo "([0-9]{1,3}.){3}[0-9]{1,3}:[0-9]{2,5}")
      cp_ip=$(echo $cp_addr | cut -d ':' -f 1)
      cp_port=$(echo $cp_addr | cut -d ':' -f 2)
      helm install cilium {{ dir }}/cilium \
        -n kube-system \
        --set kubeProxyReplacement=strict \
        --set k8sServiceHost=$cp_ip \
        --set k8sServicePort=$cp_port
    when: grep_cilium['rc'] == 1

- hosts: cluster
  gather_facts: no
  tasks:
  - name: Restart containerd
    become: yes
    ansible.builtin.shell: systemctl restart containerd
    when: hostvars['cp0']['grep_cilium']['rc'] == 1

