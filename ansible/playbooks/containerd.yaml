---
# Copy crt into containerd path
- hosts: nodes
  gather_facts: yes
  vars_files:
  - vars.yaml
  tasks:
  - name: Copy crt
    ansible.posix.synchronize:
      src: "/etc/docker/certs.d/{{ registry['url'] }}/cert.crt"
      dest: "{{ ansible_env.HOME }}/cert.crt"
    delegate_to: node0

  - name: "Copy crt to /etc/containerd/certs.d/{{ registry['url'] }}/"
    become: yes
    ansible.builtin.copy:
      remote_src: yes
      src: "{{ ansible_env.HOME }}/cert.crt"
      dest: "/etc/containerd/certs.d/{{ registry['url'] }}/"
   
  - name: Remove temporary crt
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/cert.crt"
      state: absent

# Get containerd sandbox image
- hosts: node0
  gather_facts: no
  vars_files:
  - vars.yaml
  vars:
  - dir: "{{ containerd['temp_dir'] }}"
  tasks:
  - name: Make temp dir
    ansible.builtin.file:
      path: "{{ dir }}"
      state: directory

  - name: Get containerd sandbox image
    ansible.builtin.shell: |
      containerd config default | grep sandbox_image | sed "s/.*= //" | sed 's/"//g' > "{{ dir }}/src-image"
      echo "{{ registry['url'] }}"/$(cat "{{ dir }}/src-image") > "{{ dir }}/dest-image"
      src=$(cat "{{ dir }}/src-image")
      dest=$(cat "{{ dir }}/dest-image")
      repo=$(echo $dest | sed "s/{{ registry['url'] }}\///" | cut -d ':' -f 1)
      tag=$(echo $dest | sed "s/{{ registry['url'] }}\///" | cut -d ':' -f 2)
      existtags=$(curl -ks "https://{{ registry['url'] }}/v2/$repo/tags/list")
      if [ -z $(echo $existtags | grep $tag) ]; then
        docker image pull $src 
        docker image tag $src $dest 
        docker image push $dest
      fi    

# Set containerd
- hosts: nodes
  gather_facts: no
  vars_files:
  - vars.yaml
  tasks:
  - name: Check containerd sandbox repo
    ansible.builtin.shell: cat /etc/containerd/config.toml | grep "sandbox_image = \"{{ registry['url'] }}/"
    register: grep_sandbox
    failed_when: grep_sandbox['rc'] == 2

  - name: Set containerd sandbox repo
    become: yes 
    ansible.builtin.shell: sed -i "s/sandbox_image = \"/sandbox_image = \"{{ registry['url'] }}\//" /etc/containerd/config.toml
    when: grep_sandbox['rc'] == 1

  - name: Check containerd config path
    ansible.builtin.shell: cat /etc/containerd/config.toml | grep 'config_path = "/etc/containerd/certs.d'
    register: grep_config
    failed_when: grep_config['rc'] == 2

  - name: Set config path in containerd config.toml
    become: yes
    ansible.builtin.shell: sed -i 's/config_path = "/config_path = "\/etc\/containerd\/certs.d/' /etc/containerd/config.toml
    when: grep_config['rc'] == 1

  - name: "Create /etc/containerd/certs.d/{{ registry['url'] }}/hosts.toml"
    become: yes
    ansible.builtin.blockinfile:
      path: "/etc/containerd/certs.d/{{ registry['url'] }}/hosts.toml"
      create: yes
      block: |
        server = "https://{{ registry['url'] }}"

        [host."https://{{ registry['url'] }}"]
          ca = "/etc/containerd/certs.d/{{ registry['url'] }}/cert.crt"

  - name: Restart containerd
    become: yes
    ansible.builtin.shell: systemctl restart containerd

