---
- hosts: git0
  gather_facts: no
  vars_files:
  - vars.yaml
  vars:
  - dir: "{{ gitea['dir'] }}"
  tasks:
  - name: Initialize gitea database
    ansible.builtin.shell: docker exec -itu git gitea gitea migrate

  - name: Check gitea admin user
    ansible.builtin.shell: >
      docker exec -itu git gitea gitea admin user list | grep -E "[0-9]+[ $(echo -e '\t')]+gitea[ $(echo -e '\t')]+"
    register: grep_admin
    failed_when: grep_admin['rc'] == 2

  - name: Add gitea admin user
    ansible.builtin.shell: |
      docker exec -itu git gitea gitea admin user create \
        --username {{ gitea['admin_id'] }} \
        --password {{ gitea['admin_pw'] }} \
        --email admin@email.com \
        --admin 
    when: grep_admin['rc'] == 1

  - name: Check gitea jenkins user
    ansible.builtin.shell: >
      docker exec -itu git gitea gitea admin user list | grep -E "[0-9]+[ $(echo -e '\t')]+jenkins[ $(echo -e '\t')]+"
    register: grep_jenkins
    failed_when: grep_jenkins['rc'] == 2

  # Grant admin authority to add an organization
  - name: Add gitea jenkins user
    ansible.builtin.shell: |
      docker exec -itu git gitea gitea admin user create \
        --username {{ gitea['jenkins_id'] }} \
        --password {{ gitea['jenkins_pw'] }} \
        --email jenkins@email.com \
        --admin \
        --access-token \
        --must-change-password=false | \
      grep "Access token" | sed "s/Access token was successfully created... //"
    register: jenkins_token
    when: grep_jenkins['rc'] == 1

  - name: Add a gitea organization for jenkins
    ansible.builtin.shell: |
      curl -k https://{{ gitea['external'] }}/api/v1/orgs?access_token={{ jenkins_token['stdout'] }} \
        -H 'accept: application/json' \
        -H 'Content-Type: application/json' \
        -d '{
          "full_name": "jenkins-organization",
          "username": "jenkins-automation",
          "repo_admin_change_team_access": true,
          "visibility": "public"
        }'
    when: jenkins_token['stdout'] is defined

  - name: Remove admin authority from the user jenkins
    ansible.builtin.shell: |
      curl -k https://{{ gitea['external'] }}/api/v1/admin/users/{{ gitea['jenkins_id'] }}?access_token={{ jenkins_token['stdout'] }} \
        -X PATCH \
        -H 'accept: application/json' \
        -H 'Content-Type: application/json' \
        -d '{
          "login_name": "{{ gitea.jenkins_id }}",
          "admin": false
        }'
    when: jenkins_token['stdout'] is defined

  - name: Keep the access token for later uses
    ansible.builtin.shell: echo "{{ jenkins_token['stdout'] }}" > "{{ dir }}/jenkins_token"
    when: jenkins_token['stdout'] is defined

  - name: Copy the token to the control machine
    ansible.builtin.fetch:
      src: "{{ dir }}/jenkins_token"
      dest: ./.keep/
      flat: yes
    when: jenkins_token['stdout'] is defined

  - name: Remove the old one
    ansible.builtin.file:
      path: "{{ dir }}/jenkins_token"
      state: absent
    when: jenkins_token['stdout'] is defined

